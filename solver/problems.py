
def getProblem(problem_num):
    if(problem_num == 0):
        return getProblem0
    if(problem_num == 1):
        return getProblem1

def getProblem0():
    row = [[1], [3], [1]]
    col = [[1], [3], [1]]
    return row, col

def getProblem1():
    row = [[1,1], [3], [1,1]]
    col = [[3], [1], [3]]
    return row, col

# 5x10 easy
# http://www.goobix.com/games/nonograms/?s=-874
def getProblem2():
    row = [
    [8],
    [10],
    [1,8],
    [8],
    [4]
    ]

    col = [
    [2],
    [1,1],
    [4],
    [4],
    [5],
    [5],
    [5],
    [5],
    [4],
    [3]
    ]
    return row, col

# 10x10 easy
# http://www.goobix.com/games/nonograms/?s=-1838
def getProblem3():
    row = [
    [6],
    [1,1],
    [1,1],
    [1,2,2,1],
    [1,1],
    [1,2,1],
    [1,1,1,1],
    [1,4,1],
    [1,1],
    [6]
    ]

    col = [
    [6],
    [1,1],
    [1,1,1,1],
    [1,1,1,1],
    [1,1,1,1],
    [1,1,1,1],
    [1,1,1,1],
    [1,1,1,1],
    [1,1],
    [6]
    ]
    return row, col

# 10x10 easy
# http://www.goobix.com/games/nonograms/?s=-2076
def getProblem4():
    row = [
    [7,2],
    [5,1],
    [2],
    [10],
    [3,1,2,1],
    [1,3,2],
    [2,2],
    [2],
    [3,3,1],
    [4,2]
    ]

    col = [
    [10],
    [5,4],
    [2,3,2],
    [2,1,1,1],
    [2,4,1],
    [1,1,1,1],
    [1,2,1],
    [3],
    [1,1,1,1],
    [2,2,2]
    ]
    return row, col

# 12x13 easy
# http://www.goobix.com/games/nonograms/?s=-2310
def getProblem5():
    row = [
    [3,3],
    [5,5],
    [13],
    [13],
    [13],
    [13],
    [11],
    [9],
    [7],
    [5],
    [3],
    [1]
    ]

    col = [
    [4],
    [6],
    [8],
    [9],
    [10],
    [10],
    [10],
    [10],
    [10],
    [9],
    [8],
    [6],
    [4]
    ]
    return row, col

# 12x18 easy
# http://www.goobix.com/games/nonograms/?s=-298
def getProblem6():
    row = [
    [1],
    [1],
    [1],
    [10],
    [1,1,1,1],
    [1,1,1,1],
    [16],
    [18],
    [3,9,2],
    [1,7,1],
    [1,1,1,1],
    [2,2]
    ]

    col = [
    [2],
    [4],
    [5,1],
    [1,2,1],
    [1,1,2,1],
    [1,6,1],
    [2,4],
    [1,4],
    [1,4],
    [1,4],
    [7],
    [1,4],
    [1,4],
    [1,3,1],
    [3,1],
    [2,1],
    [3,1],
    [3]
    ]
    return row, col

# 15x15 easy
# http://www.goobix.com/games/nonograms/?s=-2302
def getProblem7():
    row = [
    [3,2],
    [3,3],
    [5],
    [3],
    [11],
    [13],
    [12,2],
    [11,1],
    [11,1],
    [12,2],
    [15],
    [15],
    [13],
    [11],
    [4,4]
    ]

    col = [
    [6],
    [8],
    [10],
    [1,11],
    [2,11],
    [3,11],
    [14],
    [12],
    [14],
    [3,11],
    [2,11],
    [3,6],
    [2,4],
    [2,4],
    [6]
    ]
    return row, col

# 20x10 easy
# http://www.goobix.com/games/nonograms/?s=-1344
def getProblem8():
    row = [
    [3],
    [7],
    [7],
    [9],
    [4,4],
    [9],
    [7],
    [7],
    [1,3],
    [2,1],
    [3,1],
    [5,1],
    [4,3],
    [3,4],
    [1,4],
    [5],
    [4],
    [3],
    [1],
    [3]
    ]

    col = [
    [3,4],
    [7,4],
    [7,4],
    [9,3,1],
    [4,15],
    [9,3,1],
    [7,5],
    [7,5],
    [3,4],
    [4]
    ]
    return row, col

# 16x16 easy
# http://www.goobix.com/games/nonograms/?s=-2320
def getProblem9():
    row = [
    [2],
    [4,3],
    [7,1],
    [8,1],
    [11],
    [12],
    [14],
    [16],
    [16],
    [1,1],
    [1,6,1],
    [1,1,1,1,1],
    [1,1,1,1,1],
    [1,6,1],
    [1,1],
    [12]
    ]

    col = [
    [2],
    [3],
    [11],
    [5,1],
    [6,1],
    [7,4,1],
    [8,1,1,1],
    [9,1,1,1],
    [9,4,1],
    [8,1,1,1],
    [7,4,1],
    [8,1],
    [1,5,1],
    [15],
    [3],
    [2]
    ]
    return row, col

# 15x18 easy
# http://www.goobix.com/games/nonograms/?s=-988
def getProblem10():
    row = [
    [12],
    [2,6],
    [2,8],
    [2,10],
    [1,11],
    [1,5,4],
    [1,5,4],
    [1,11],
    [1,11],
    [1,10],
    [1,2,9],
    [2,2,8],
    [2,7],
    [2,7],
    [12]
    ]

    col = [
    [9],
    [2,2],
    [2,2],
    [2,2],
    [1,2,1],
    [1,2,1],
    [1,1],
    [1,5,1],
    [1,7,1],
    [1,9,2],
    [15],
    [15],
    [5,8],
    [5,8],
    [15],
    [13],
    [11],
    [9]
    ]
    return row, col

# 15x20 medium
# http://www.goobix.com/games/nonograms/?s=-1088
def getProblem11():
    row = [
    [5,5],
    [2,4,4,2],
    [2,9,3,2],
    [1,2,2,3,1],
    [1,2,2,2,3],
    [3,4,5,2],
    [2,2,2,2,3,2],
    [2,6,6,2],
    [1,5,4,2],
    [3,1,2,1],
    [1,3,2],
    [2,1,1,1,3],
    [2,5,2],
    [4,3],
    [5,4]
    ]

    col = [
    [7,2],
    [2,3,2],
    [2,2,2],
    [1,3,2,2],
    [4,4,2],
    [3,5,2],
    [3,2,3,1],
    [2,5,1,1],
    [1,3,1],
    [2,1,1],
    [2,4],
    [2,3,1,1],
    [1,5,1,1],
    [3,2,3,1,1],
    [3,5,1],
    [1,2,4,1],
    [1,1,2,1],
    [2,2,3],
    [2,5,4],
    [10]
    ]
    return row, col

# 15x20 medium
# http://www.goobix.com/games/nonograms/?s=-570
def getProblem12():
    row = [
    [2],
    [1,8],
    [2,5],
    [5,7],
    [8,7],
    [6,2,2,2],
    [3,2,1],
    [2,4,9,1],
    [2,8,2],
    [1,1,7],
    [1,2,10],
    [4,12],
    [3,2,4,4],
    [2,2,2],
    [1,2,3]
    ]

    col = [
    [1,3,4,3],
    [4,2,3],
    [1,5,3,1],
    [2,9,2],
    [1,6,3],
    [1,2,4,1,1],
    [1,1,5,2],
    [1,2,7],
    [3,1,5],
    [5,6],
    [4,7],
    [6,3],
    [4,1,2],
    [2,1,2],
    [1,1,2],
    [1,1,2],
    [1,1,2],
    [1,1,2],
    [1,1,1],
    [2]
    ]
    return row, col

# 20x16 medium
# http://www.goobix.com/games/nonograms/?s=-420
def getProblem13():
    row = [
    [13],
    [14],
    [16],
    [14,1],
    [14,1],
    [1],
    [1],
    [10],
    [1],
    [1],
    [1],
    [1],
    [1],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3],
    [3]
    ]

    col = [
    [4],
    [5],
    [5],
    [5],
    [5],
    [5,7],
    [5,13],
    [5,1,7],
    [5,1],
    [5,1],
    [5,1],
    [5,1],
    [5,1],
    [5,1],
    [1,1],
    [6]
    ]
    return row, col

# 17x22 medium
# http://www.goobix.com/games/nonograms/?s=-2234
def getProblem14():
    row = [
    [4,4],
    [13],
    [5,8],
    [4,2,1,4],
    [2,1,1,2],
    [2,1,1],
    [2,2],
    [3,5],
    [4,2,2,2,1],
    [2,2,1,7,1],
    [1,5,1,8,1],
    [2,17,1],
    [19,2],
    [11,9],
    [10,8],
    [9,5],
    [6]
    ]

    col = [
    [3],
    [1,7],
    [3,2,4],
    [3,1,6],
    [3,2,7],
    [3,10],
    [3,2,8],
    [3,2,1,7],
    [2,1,1,7],
    [2,1,1,5],
    [3,5],
    [2,2],
    [4,5],
    [3,1,7],
    [3,2,8],
    [4,2,7],
    [3,9],
    [2,9],
    [2,1,7],
    [1,1,2,2],
    [1,3],
    [4]
    ]
    return row, col

#25x25 easy
#teddybear.sgriddler
def getProblem15():
    row = [
    [5,8,4],
    [2,3,2,2],
    [2,1,2,2],
    [2,1,1,2],
    [2,1,3],
    [3,2,2,1],
    [1,1,2,1,1],
    [1,1],
    [2,1],
    [1,2],
    [3,5,4,3],
    [1,19,1],
    [1,10,1],
    [1,1,2,2,1,1],
    [7,3,2,8],
    [1,3,2,1],
    [5,3,2,1,4],
    [2,5,2,3,2],
    [1,3,4,2,1,3],
    [1,3,1,2,2,1,3],
    [1,3,1,1,3],
    [1,3,3,3,3],
    [1,3,1,8,2,3],
    [7,5],
    [5]
    ]

    col = [
    [4],
    [1,1],
    [5,1,1,7],
    [6,2,1,2,2],
    [1,1,1,1,1,7],
    [1,5,1,1,1,7],
    [4,2,1,4,7],
    [1,2,2,2],
    [2,3,7],
    [1,2,3,5,1],
    [1,1,10,2],
    [1,10,1],
    [1,1,2,1],
    [1,1,2,1],
    [1,1,5,1],
    [2,2,10,1],
    [2,3,5,1],
    [1,3,6,2],
    [1,6,1,8],
    [5,1,1,1,2],
    [4,1,1,2,2],
    [2,1,1,1],
    [1,1,1,6],
    [1,1,8],
    [4,7]
    ]
    return row, col

#20x25 easy
#bird.sgriddler
def getProblem16():
    row = [
    [4],
    [6,2],
    [1,5,6],
    [14,7],
    [20],
    [4,10],
    [2,10],
    [1,12],
    [2,14],
    [1,11],
    [2,1],
    [3,5],
    [4,1],
    [1,2,3],
    [2,1,7],
    [2,11],
    [1,11],
    [11],
    [9],
    [7]
    ]

    col = [
    [1],
    [1],
    [4],
    [2,3],
    [7],
    [9,1],
    [6,3,2],
    [4,2,2],
    [3,2,1,3],
    [6,2,5],
    [7,1,2,3],
    [7,3,3],
    [7,2,3],
    [7,1,3],
    [6,1,4],
    [8,5],
    [6,3,3],
    [7,3],
    [3,3,4],
    [3,3,3],
    [3,2,3],
    [4,1,3],
    [3,1,4],
    [2,3],
    [1,3]
    ]
    return row, col

#30x30 easy
#puppy.sgriddler
def getProblem17():
    row = [
    [9],
    [12],
    [14,3],
    [17,5],
    [11,11],
    [11,10],
    [11,2,10],
    [11,2,9],
    [5,4,9],
    [4,13],
    [3,2,5,2],
    [3,2,3,2,3],
    [4,3,1,5],
    [8,2,1,5],
    [8,3,1,5],
    [7,3,2,4],
    [8,5,4],
    [9,1,12],
    [10,3,9],
    [8,2,4,9],
    [7,9,10],
    [5,2,1,1,11],
    [5,13],
    [22],
    [21],
    [21],
    [2,6,9],
    [1,4,4,1],
    [2,2,1,3,1],
    [8,7,6]
    ]

    col = [
    [3],
    [5],
    [5,8],
    [19],
    [20],
    [21],
    [8,10,2],
    [8,2,8,4],
    [8,2,6,4,1],
    [8,2,3,4,1],
    [9,2,7,1],
    [13,7,1],
    [13,1,8],
    [5,4,2,10],
    [4,2,2,3,2,5],
    [4,2,2,3,2,7],
    [3,1,1,2,4,1],
    [3,2,8,1],
    [7,2,4,1],
    [7,2,5,1],
    [7,2,7,1],
    [8,15],
    [7,18],
    [8,14],
    [7,2,12,1],
    [7,4,10,1],
    [5,16,1],
    [3,16,1],
    [18],
    [10]
    ]
    return row, col

#30x30 easy
#rose1.sgriddler
def getProblem18():
    row = [
    [3,6],
    [1,3,2,2],
    [3,3,1,3,1],
    [1,2,1,1,1,1,1,1],
    [1,4,1,1,1,3,1,1,1],
    [1,3,1,3,3,1,2],
    [4,3,3,2,1,2],
    [1,4,3,4,5],
    [3,4,6,2,3,1],
    [4,3,3,3,5],
    [6,6,6,2,4],
    [6,6,3,2,5],
    [7,5,2,2,3],
    [2,4,3,6,1],
    [7,5,13],
    [1,3,8,3,3],
    [5,2,4,2,3,4],
    [1,1,3,2,3,2],
    [5,7,2],
    [9],
    [3],
    [5,3],
    [1,5,3,3],
    [1,5,1,5],
    [2,5,7],
    [2,1,9],
    [1,1,6],
    [5,1,1],
    [3],
    [1,1]
    ]

    col = [
    [2],
    [3,3],
    [4,2,1],
    [8,1],
    [1,3,1,1],
    [2,3,1,1],
    [5,2,2,1,4],
    [1,3,2,3,1,1,1],
    [1,2,1,2,4,2,1],
    [1,1,3,3,1,3,2],
    [1,3,3,2,2,4,1],
    [1,4,3,6,4,1],
    [1,6,2,4,3,2],
    [1,2,2,3,3,2,3,1],
    [3,2,1,3,5,4],
    [1,1,2,5,3,2],
    [2,4,3,5,12],
    [1,1,8,3,5,3,1],
    [2,3,2,2,2,13],
    [3,1,3,1,4,4],
    [1,2,3,2,1,1,2,1,4],
    [3,3,2,4,2,4],
    [1,3,2,1,3,2,3],
    [1,1,2,2,5],
    [1,2,2,3,1],
    [2,3,4,1],
    [1,5,4],
    [1,7,2],
    [2,4,1],
    [2,1,4]
    ]
    return row, col

#30x25 easy
#rose2.sgriddler
def getProblem19():
    row = [
    [0],
    [0],
    [0],
    [0],
    [3,3,2],
    [5,2,3],
    [5,2,4],
    [7,3,3],
    [5,1,3,3],
    [3,4,2],
    [4,2,4,3],
    [1,3,1,5,3],
    [1,1,1,5,3],
    [2,4,3],
    [7,3,1,1],
    [7,7],
    [8,8],
    [1,5,8],
    [3,1,6],
    [8,4],
    [5,5,6],
    [3,3,1,8],
    [1,7],
    [4,1,3],
    [8,1],
    [10,1],
    [8,1,1],
    [1,4,1],
    [1],
    [3]
    ]

    col = [
    [0],
    [4,2],
    [3,4,2],
    [6,3,2],
    [1,5,4,2],
    [5,2,4,3,3],
    [5,4,3,3],
    [4,3,4,3,3],
    [3,1,3,2,5],
    [1,3,4,1,2,5],
    [2,6,1,1,5],
    [11,6,5],
    [8,7,3],
    [2,6,8,2,1],
    [3,1,6,2,1],
    [9,4,2,3],
    [8,4,4],
    [3,3,4,2],
    [2,3],
    [4],
    [4],
    [4],
    [3],
    [3],
    [1]
    ]
    return row, col

#40x40 easy
#smurf.sgriddler
def getProblem20():
    row = [
    [16],
    [7,5],
    [4,3],
    [4,2],
    [3,2],
    [3,1],
    [2,1],
    [2,2],
    [2,3,2],
    [2,4,3],
    [2,9],
    [1,1],
    [2,7],
    [1,7,6],
    [1,5,4],
    [2,3,2],
    [2,2],
    [2,5,3,1],
    [1,8,5,2],
    [1,16,6],
    [1,5,4,4,2],
    [1,4,2,2,4,1],
    [1,4,1,1,6],
    [1,6,3,1,3,8],
    [2,8,2,1,2,9],
    [2,10,3,9,1],
    [2,3,25,2],
    [2,7,17,3,2],
    [2,9,18,1,1],
    [1,3,29,1],
    [1,3,1,5,12,7,1],
    [1,3,3,3,14,5,2],
    [1,4,6,1,10,1,5,2],
    [1,4,8,8,2],
    [2,7,6,4,7,3],
    [3,3,7,4,6,3],
    [4,1,6,6,4],
    [8,14,4],
    [4,6,4],
    [5,5]
    ]

    col = [
    [11,8],
    [6,5,3],
    [4,2,3,2],
    [4,6,2],
    [4,8,2],
    [3,4,3,1],
    [3,3,1,3,1],
    [2,3,3,2,1],
    [2,3,2,2,2],
    [2,1,4,3,3],
    [2,2,8,3],
    [2,1,3,6,1,2],
    [1,1,4,8,1],
    [2,2,9,5,1],
    [2,1,10,6,1],
    [2,1,11,1,5],
    [2,2,14,5],
    [1,2,4,9,5],
    [1,1,1,4,8,2],
    [1,1,1,3,1,7,1,2],
    [1,2,1,3,2,7,2,2],
    [1,1,2,3,2,7,2,2],
    [1,2,2,4,7,2,2],
    [1,2,1,4,8,1,2],
    [1,1,1,14,2],
    [1,1,2,3,8,3],
    [2,4,3,1,7,4,1],
    [2,1,2,3,2,6,4,1],
    [2,1,1,3,2,4,1,4,1],
    [1,1,2,3,5,4,2],
    [2,2,2,4,3,3,3,2],
    [1,1,1,2,4,6,2],
    [2,2,2,1,6,6,2],
    [2,2,2,1,7,5,2],
    [4,4,7,5,2],
    [2,6,4,2],
    [1,6,3,3],
    [1,4,3],
    [2,2,2,4],
    [2,8]
    ]
    return row, col

#50x30 easy
#sail.sgriddler
def getProblem21():
    row = [
    [3,1],
    [7],
    [9],
    [4],
    [1],
    [1],
    [18],
    [2,2,2],
    [1,2,2],
    [2,2,7],
    [1,13],
    [1,8,5],
    [1,9,4],
    [10,4],
    [10,3],
    [11,2],
    [23],
    [12,5],
    [12,5],
    [12,4],
    [12,4],
    [12,4],
    [12,3],
    [12,3],
    [26],
    [12,6],
    [13,6],
    [13,6],
    [14,6],
    [2,4,3,5],
    [2,3,2,5],
    [2,2,2,5],
    [2,1,1,5],
    [3,1,5],
    [3,9,4],
    [4,11,4],
    [4,12,3],
    [4,16],
    [7,15],
    [9,15],
    [10,2],
    [11,2],
    [12,2,2],
    [16,5],
    [2,24],
    [1,2,6,14],
    [3,4,2,12],
    [2,3,2,15,3],
    [2,8,4,3,1],
    [5,5,4,7]
    ]

    col = [
    [2,1,1],
    [4,1,2],
    [2,2,3,2],
    [3,2,3,1],
    [14,5,2,1],
    [13,3,8,3],
    [14,12,2],
    [14,15],
    [14,1,13],
    [15,2,10,2],
    [1,20,3,8,2],
    [1,4,16,3,7,3],
    [1,2,17,4,6,4],
    [2,1,18,4,6,2,1],
    [3,1,20,5,5,2],
    [3,1,21,6,7],
    [4,1,13,1,3,5,6],
    [3,1,11,1,5,7],
    [3,3,7,1,13,1],
    [8,4,1,1,13,1],
    [1,3,1,1,4,6],
    [1,2,1,1,7,4,5],
    [1,1,1,1,9,3,5],
    [1,6,1,4,12,3,5,1],
    [9,7,16,5,1],
    [2,6,24,6,1],
    [1,20,5,5,2],
    [1,3,4,4,3,3,1,1],
    [2,2,2,2,1,1],
    [1,1,1,1,1,1]
    ]
    return row, col


def getProblem22():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem23():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem24():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem25():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem26():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem27():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem28():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem29():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem30():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem31():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem32():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem33():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem34():
    row = [

    ]

    col = [

    ]
    return row, col


def getProblem35():
    row = [

    ]

    col = [

    ]
    return row, col

#50x46 3rd hardest
#moon3.sgriddler
def getProblem36():
    row = [
    [9],
    [15],
    [7,11],
    [2,7],
    [9,6],
    [8,5],
    [5,5],
    [4,5],
    [4,5],
    [3,5],
    [3,4],
    [2,5],
    [3,4],
    [2,4],
    [2,6,4],
    [4,8,3],
    [9,5,4],
    [9,6,4],
    [1,2,3,4,3],
    [14,2,4],
    [2,4,9,4],
    [1,2,2,5,4],
    [5,2,5,4],
    [3,6,4],
    [4,3,4],
    [4,2,4],
    [10,4],
    [9,4],
    [2,5],
    [6,5],
    [1,11,5],
    [2,10,4],
    [3,3,5],
    [4,3,3,5],
    [6,8,5],
    [7,3,4,5],
    [3,15,6],
    [3,11,6],
    [4,7],
    [5,7],
    [5,7],
    [5,8],
    [7,8],
    [8,9],
    [26],
    [25],
    [21],
    [17],
    [10],
    [0]
    ]

    col = [
    [0],
    [5],
    [6],
    [7],
    [7],
    [2,4],
    [2,4],
    [2,4],
    [2,5],
    [2,5],
    [1,2,5],
    [1,2,5],
    [2,2,5],
    [3,2,6],
    [1,2,2,5],
    [2,2,2,5],
    [2,2,2,4],
    [2,2,2,5],
    [3,2,2,5],
    [3,2,3,5],
    [2,2,3,2,5],
    [2,2,4,4,3,5],
    [3,2,2,4,4,2,5],
    [3,3,2,1,6,2,2,5],
    [3,3,3,2,3,2,3,3,5],
    [3,4,3,5,2,3,2,5],
    [3,5,4,4,6,2,5],
    [3,11,6,3,4],
    [3,2,4,3,6,5],
    [3,3,3,2,5,5],
    [3,3,5,3,5],
    [3,2,4,2,2,6],
    [4,7,1,2,5],
    [4,4,6,1,6],
    [4,4,6,7],
    [5,5,5,6],
    [5,4,4,7],
    [6,5,7],
    [6,2,8],
    [7,9],
    [9,12],
    [28],
    [24],
    [18],
    [12],
    [0]
    ]
    return row, col

#50x50
#lighthouse.sgriddler
def getProblem37():
    row = [
    [7,2,7],
    [3,4,3],
    [4,6,3],
    [3,1,1,3],
    [3,8,5],
    [7,1,7],
    [8],
    [1,1,1,1],
    [1,1,1,1],
    [2,7,1,1,8],
    [3,1,1,1,1,3],
    [4,12,6],
    [4,5,4,6,3],
    [3,10,11,2],
    [3,2,2,2,2,2,4],
    [3,1,3,1,2,1,3,1,2],
    [1,1,1,1,2,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,2],
    [1,3,1,2,1,3,1,3],
    [1,3,1,1,3,1,4],
    [1,2,2,1,5],
    [2,1,13,1,5],
    [22,4],
    [24,3],
    [7,1,1,6,2],
    [3,1,2,1,2,1],
    [1,3,1,1,1,1,3,1,1,3],
    [1,1,1,1,1,1,1,1,1,10,3],
    [1,3,1,1,1,1,3,10,3],
    [6,3,1,4,1,3,1,1,3],
    [3,1,1,4,1,2,1,1],
    [3,1,2,4,2,1,8,3],
    [2,9,9,1,1],
    [5,24,1,3],
    [1,10,2,4,1,1],
    [7,1,3,2,2,3,1,1,1,1,1],
    [7,1,1,1,4,1,1,1,1,4,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,3,1,4,1,3,1,4,1,1],
    [2,1,4,1,2,1,1],
    [9,1,7,1,1],
    [1,6,5,1,1,1],
    [4,8,6,1,1],
    [7,9,1,1],
    [25,1,1],
    [1,21,1,1,1],
    [5,13,1,1,1],
    [5,2,1,1,2,1,1],
    [3,3,1,1,6,1,1],
    [3,23,9]
    ]

    col = [
    [1,1,1,1],
    [1,1,1,1,1,1],
    [1,1,1,1,1,2],
    [1,1,1,1,1],
    [1,1,2,1,2],
    [1,2,1,1,1],
    [1,1,1,1,1],
    [2,1,2,1,1,1],
    [1,1,1,2,1,1],
    [2,1,1,1,1],
    [1,2,2,1,1],
    [1,1,1,1,3,1],
    [2,1,1,1,2,2,3],
    [1,2,3,1,9,7],
    [2,1,2,4,1,2,1,3,2],
    [1,2,22,4,1,3,1],
    [2,1,2,3,2,1,1,1,3,1],
    [1,1,2,5,3,4,2,4,1,3,1],
    [1,1,2,1,2,3,1,2,2,2,7],
    [1,1,3,5,4,4,2,7,3,1],
    [1,1,1,2,4,5,1,3,1],
    [8,22,1,3,1],
    [5,1,1,3,2,2,3,1],
    [2,1,8,3,6,2,4,2,3,1],
    [3,1,1,2,2,1,3,1,3,2,1,2,1,3,1],
    [3,10,2,1,3,1,3,2,1,2,1,3,1],
    [2,1,1,3,3,6,2,4,1,3,1],
    [5,1,1,3,2,1,3,1],
    [8,22,2,3,1],
    [1,1,4,4,5,2,3,1],
    [1,1,3,5,3,2,7,7],
    [1,1,2,1,2,4,4,2,1,3,1],
    [1,1,2,5,3,1,2,2,4,1,3,1],
    [2,1,2,3,4,2,1,1,1,3,1],
    [1,1,13,2,4,1,4,1],
    [1,2,2,12,1,4,1],
    [1,1,3,2,1,3,1,3,2],
    [2,2,2,1,7,7],
    [1,1,2,1,2,2,2],
    [2,1,2,1,5,3,1],
    [1,1,1,2,1,1,1,1,1],
    [2,1,1,2,1,1,1,1,2],
    [1,2,2,1,5,1],
    [2,1,2,1,1],
    [1,2,29],
    [1,2,5,1],
    [1,1,5,1],
    [1,1,5,24],
    [1,2,5,4,1,1,1],
    [1,6,4,1,1,1]
    ]
    return row, col

#20x20 3rd Hardest
#football.sgriddler
def getProblem38():
    row = [
    [3],
    [5],
    [3,1],
    [2,1],
    [3,3,4],
    [2,2,7],
    [6,1,1],
    [4,2,2],
    [1,1],
    [3,1],
    [6],
    [2,7],
    [6,3,1],
    [1,2,2,1,1],
    [4,1,1,3],
    [4,2,2],
    [3,3,1],
    [3,3],
    [3],
    [2,1]
    ]

    col = [
    [2],
    [1,2],
    [2,3],
    [2,3],
    [3,1,1],
    [2,1,1],
    [1,1,1,2,2],
    [1,1,3,1,3],
    [2,6,4],
    [3,3,9,1],
    [5,3,2],
    [3,1,2,2],
    [2,1,7],
    [3,3,2],
    [2,4],
    [2,1,2],
    [2,2,1],
    [2,2],
    [1],
    [1]
    ]
    return row, col

# 30x40 2nd hardest level
# okay.sgriddler
def getProblem39():
    col = [
    [0],
    [5],
    [4,5],
    [2,4],
    [1,3],
    [1,3],
    [1,4],
    [7,2,3],
    [3,4,3,2],
    [2,5,2,6],
    [1,6,6],
    [1,1,4,3,1],
    [1,1,2,3,1],
    [2,2,1,6,1],
    [4,2,1,3,1],
    [7,2,2,1],
    [3,2,2,1],
    [3,2,2],
    [2,3,3],
    [8,3],
    [3,2,5],
    [3,3,3],
    [2,5,6],
    [1,2,2,2,2],
    [1,5,6],
    [1,2,4,1],
    [1,1,1],
    [1,5,1],
    [2,2,1,2],
    [2,1,3],
    [2,6],
    [2,3,2],
    [2,2],
    [2,1,2],
    [2,1,5],
    [3,3,3],
    [7,2],
    [3,2],
    [5],
    [0]
    ]

    row = [
    [0],
    [7],
    [3,2],
    [2,2],
    [1,2],
    [1,1],
    [1,1],
    [6,1],
    [2,2,4],
    [2,1,6,9],
    [2,2,2,3,4],
    [1,2,5,2,4],
    [2,1,6,2,4],
    [2,3,4,1,1,2,3],
    [1,5,1,3,2,2],
    [2,2,2,1,5,1,1],
    [2,4,5,3,2],
    [2,14,2,2,2],
    [3,2,7,4,9],
    [3,2,2,3,3],
    [2,2,1,3,2],
    [2,3,1,3,1],
    [2,3,1,10,2],
    [5,4,2,4],
    [3,5,3],
    [2,6,2],
    [12,2,1],
    [2,2,2],
    [1,2],
    [0]
    ]
    return row, col

# Hardest 50 x 50 looks like a tree
# oldtree.sgriddler
def getProblem40():
    row = [
    [2,2,1,1,1],
    [1,1,2,2,2,2],
    [2,2,3,4,3,1],
    [1,2,2,3,3,3,1],
    [3,2,3,2,3,3,2,1],
    [3,2,3,2,4,4,6],
    [3,3,2,2,5,3,3],
    [3,5,7,1,6],
    [3,5,6,2,5],
    [3,2,2,2,2,8],
    [6,2,2,2,6],
    [3,4,2,2,6,1],
    [2,3,2,2,6,2],
    [8,4,3,3,6,2,4],
    [10,7,3,5,9],
    [3,4,6,13],
    [2,4,5,5],
    [2,4,4,3],
    [2,3,1,4,2],
    [3,2,2,3,2],
    [6,2,3,3,2],
    [5,2,3,4,3,3],
    [2,1,5,3,3,2],
    [1,4,2,2,1],
    [4,2,1,2,2,5],
    [1,3,2,1,2,2,1,2],
    [1,1,1,4,2,2,1,3],
    [3,1,2,2,2,1,2,1],
    [5,3,2,2,3,1],
    [1,3,2,2,3,2,2],
    [2,2,4,1,5],
    [2,2,6,1],
    [1,2,2,2,2,2,5,2,2,2,2,1],
    [1,2,2,2,2,2,4,2,2,2,2,1],
    [1,2,2,2,2,1,3,2,2,2,2,1],
    [17,1,22],
    [1,2,2,2,3,2,3,2,2,2,2,1],
    [16,2,22],
    [1,2,2,2,2,2,3,2,2,2,2,1],
    [2,4],
    [2,3,5,7],
    [3,5,7,3],
    [3,3,2,1,3,3],
    [3,3,2,2,4,4],
    [3,3,2,3,4,4,3],
    [5,3,2,3,3,1,3],
    [3,4,3,2,2,2,3],
    [2,3,2,1,2],
    [2,2,3],
    [2,1,1]
    ]

    col = [
    [2,2,7],
    [2,2,1,1],
    [3,2,1,1],
    [4,2,7],
    [4,7,7],
    [4,7,6,1,1],
    [1,3,3,3,1,2,1,1,3],
    [7,5,9,7,3],
    [6,5,2,1,7,2],
    [5,2,4,1,1,2],
    [4,2,1,1,3],
    [4,2,7,3,2],
    [8,3,4,7,3,2],
    [3,4,4,7,1,1,3,3],
    [3,2,4,2,4,7,3],
    [2,3,4,6,12,3],
    [3,7,8,3],
    [1,2,6,3],
    [3,2,3],
    [3,1,2],
    [6,2,5],
    [12,13,6],
    [8,19,3],
    [3,3,3,4],
    [9,3,5,2],
    [11,2,2,3],
    [9,3,10,2,3],
    [6,2,13,2,2],
    [2,1,3,8,2],
    [2,2,3,10,2],
    [2,3,3,1,9,3],
    [3,3,4,1,3,3],
    [2,2,1,1,1,3],
    [2,3,9,6],
    [2,3,7,1,3,2],
    [3,3,3,2,1,1,1],
    [3,5,2,1,1,1,4],
    [4,4,2,7,1,1,3],
    [4,7,7,2,2,1],
    [12,8,1,1,3,3,2],
    [7,2,1,3,1,1,3,2],
    [4,2,1,2,1,7,3,1],
    [3,3,4,1,7,2],
    [3,4,6,2,1,1,2],
    [4,9,4,1,1],
    [5,9,7],
    [1,4,7],
    [1,2,1,1],
    [1,3,1,1],
    [2,7]
    ]
    return row, col
